css/style/font-awesome.css
				}
			}

			if _, err := buff.WriteString(token.String()); err!= nil {
				return err
			}

		case html.CommentEndToken:

			// Comment is not handled as there is no safe parsing mechanism
			// provided by golang.org/x/net/html for the content, and this can
			// be misused to insert HTML tags that are not then sanitized
			//
			// One might wish to add a new comment to the map.
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces = true
			p.addSpaces =